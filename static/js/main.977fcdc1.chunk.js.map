{"version":3,"sources":["app/reducers/bookListReducer.js","app/actions/types.js","app/reducers/index.js","app/store/index.js","app/components/header/Header.js","app/actions/apiService.js","app/actions/bookList.js","app/components/bookCard/BookCard.js","app/components/pagination/BookListPagination.js","app/components/search/SearchBar.js","app/components/loader/Loader.js","app/containers/bookStore/BookStore.js","app/config/endpoint.js","app/components/footer/Footer.js","app/pages/BookPage.js","app/App.js","index.js"],"names":["initialState","isLoaded","books","filters","bookListReducer","state","action","type","payload","data","count","current_page","page","createRootReducer","history","combineReducers","router","connectRouter","bookList","History","middleware","thunk","routerMiddleware","composedEnhancers","compose","applyMiddleware","createStore","Header","title","Container","className","onError","error","response","status","toast","Promise","reject","service","axios","create","interceptors","use","this","onSuccess","path","params","callback","post","then","defaultOptions","itemsPerPage","BookCard","book","Card","border","Body","Title","book_title","Subtitle","book_publication_city","book_publication_country","Text","book_publication_year","BookListPagination","active","loadPaginatedList","items","onPaginationClicked","totalPage","e","Number","target","text","number","push","Pagination","Item","key","onClick","SearchBar","searchBooks","inputEl","useRef","Form","Row","Col","xs","FormControl","ref","placeholder","Button","variant","current","value","Loader","Spinner","animation","BookStore","props","navigateTo","fetchBookList","searchText","pageId","CSSTransition","in","timeout","classNames","unmountOnExit","CardColumns","map","index","Component","connect","dispatch","options","values","getState","ApiService","booksLoaded","Footer","BookPage","match","App","basename","exact","component","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.977fcdc1.chunk.js","sourcesContent":["import * as ACTION_TYPES from '../actions/types';\n\nconst initialState = {\n\tisLoaded: false,\n\tbooks: [],\n\tfilters: []\n};\n\nexport default function bookListReducer(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase ACTION_TYPES.REQUEST_BOOKS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoaded: false\n\t\t\t};\n\t\tcase ACTION_TYPES.BOOKS_LOADED:\n\t\t\tconst { books, count } = action.payload.data;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tbooks,\n\t\t\t\tcount,\n\t\t\t\tfilters: action.payload.filters,\n\t\t\t\tcurrent_page: action.payload.page,\n\t\t\t\tisLoaded: true\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","export const REQUEST_BOOKS = \"REQUEST_BOOKS\";\nexport const BOOKS_LOADED = \"BOOKS_LOADED\";","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport bookList from './bookListReducer';\n\nconst createRootReducer = (history) => combineReducers({\n    router: connectRouter(history),\n    bookList\n})\n\nexport default createRootReducer","import { createStore, applyMiddleware, compose } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport * as History from 'history';\nimport createRootReducer from '../reducers'\n\nexport const history = History.createBrowserHistory()\n\nconst initialState = {}\nconst enhancers = []\nconst middleware = [thunk, routerMiddleware(history)]\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension())\n  }\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n)\n\nexport default createStore(\n  createRootReducer(history),\n  initialState,\n  composedEnhancers\n)","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport './Header.scss';\n\nconst Header = ({ title }) => {\n\treturn (\n\t\t<header>\n\t\t\t<Container>\n\t\t\t\t<h4 className=\"text-white\">\n\t\t\t\t\t<small>{title}</small>\n\t\t\t\t</h4>\n\t\t\t</Container>\n\t\t</header>\n\t);\n};\nexport default Header;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nclass ApiService {\n\tconstructor() {\n\t\tlet service = axios.create();\n\t\tservice.interceptors.response.use(this.onSuccess, this.onError);\n\t\tthis.service = service;\n\t}\n\n\tonSuccess(response) {\n\t\treturn response;\n\t}\n\n\tonError = (error) => {\n\t\tswitch (error.response.status) {\n\t\t\tcase 401:\n\t\t\t\ttoast.error('Oops! Authentication Error');\n\t\t\t\tbreak;\n\t\t\tcase 403:\n\t\t\t\ttoast.error('Rate Limit Exceeded');\n\t\t\t\tbreak;\n\t\t\tcase 404:\n\t\t\t\ttoast.error('Oops! 404 Error');\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttoast.error('Oops! Some Internal Error Found');\n\t\t\t\tbreak;\n\t\t}\n\t\treturn Promise.reject(error);\n\t};\n\n\tpost(path, params, callback) {\n\t\treturn this.service.post(path, params).then((response) => callback(response.status, response.data));\n\t}\n}\n\nexport default new ApiService();\n","import * as ACTION_TYPES from './types';\nimport { API_ENDPOINT } from '../config/endpoint';\nimport ApiService from './apiService';\nimport { push } from 'connected-react-router'\n\nconst defaultOptions = {\n\tpage: 1,\n\titemsPerPage: 20,\n\tfilters: []\n};\n\nconst requestBooks = () => {\n\treturn {\n\t\ttype: ACTION_TYPES.REQUEST_BOOKS\n\t};\n};\n\nconst booksLoaded = (data, page, filters) => {\n\treturn {\n\t\ttype: ACTION_TYPES.BOOKS_LOADED,\n\t\tpayload: {\n\t\t\tdata,\n\t\t\tpage,\n\t\t\tfilters\n\t\t}\n\t};\n};\n\nexport const fetchBookList = (options) => {\n\tconst { page, searchText } = options;\n\t\n\tif (searchText) {\n\t\tdefaultOptions.filters.push({\n\t\t\ttype: 'all',\n\t\t\tvalues: [searchText]\n\t\t});\n\t} else {\n\t\tdefaultOptions.filters = [];\n\t}\n\treturn (dispatch, getState) => {\n\t\tdispatch(requestBooks());\n\t\treturn ApiService.post(\n\t\t\t`${API_ENDPOINT}/api/books`,\n\t\t\t{ params: { ...defaultOptions, ...options } },\n\t\t\t(status, data) => {\n\t\t\t\tdispatch(booksLoaded(data, page, defaultOptions.filters));\n\t\t\t}\n\t\t);\n\t};\n};\n\nexport const navigateTo = (page) => (dispatch) => dispatch(push(`/book-list/${page}`));\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\n\nconst BookCard = ({ book }) => {\n\treturn (\n\t\t<Card border=\"primary\">\n\t\t\t<Card.Body>\n\t\t\t\t<Card.Title>{book.book_title}</Card.Title>\n\t\t\t\t<Card.Subtitle className=\"mb-2 text-muted\">\n\t\t\t\t\t{book.book_publication_city}, {book.book_publication_country}\n\t\t\t\t</Card.Subtitle>\n\t\t\t\t<Card.Text>\n\t\t\t\t\tPublication Year: <span className=\"text-info\">{book.book_publication_year}</span>\n\t\t\t\t</Card.Text>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t);\n};\nexport default BookCard;\n","import React from 'react';\nimport { Pagination } from 'react-bootstrap';\n\nconst BookListPagination = ({ active, loadPaginatedList, totalPage }) => {\n\tlet items = [],\n\t\tnumber_of_pages = totalPage / 20;\n\n\tconst onPaginationClicked = (e) => {\n\t\tconst page = Number(e.target.text);\n\t\tloadPaginatedList(page);\n\t};\n\n\t//Setting No. of pages to 10 for now\n\t// TODO:\n\tnumber_of_pages = 10; //HARD CODE\n\n\tfor (let number = 1; number < number_of_pages ; number++) {\n\t\titems.push(\n\t\t\t<Pagination.Item key={number} active={number === active} onClick={onPaginationClicked}>\n\t\t\t\t{number}\n\t\t\t</Pagination.Item>\n\t\t);\n\t}\n\n\treturn <Pagination className=\"float-right\">{items}</Pagination>;\n};\nexport default BookListPagination;\n","import React, { useRef } from 'react';\nimport { Button, Form, FormControl, Col } from 'react-bootstrap';\n\nconst SearchBar = ({ searchBooks }) => {\n\tconst inputEl = useRef(null);\n\tconst onSearchCLick = () => {\n\t\tsearchBooks(inputEl.current.value);\n\t};\n\treturn (\n\t\t<Form>\n\t\t\t<Form.Row>\n\t\t\t\t<Col xs={9}>\n\t\t\t\t\t<FormControl ref={inputEl} type=\"text\" placeholder=\"Search\" />\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<Button variant=\"outline-primary\" onClick={onSearchCLick}>\n\t\t\t\t\t\tSearch\n\t\t\t\t\t</Button>\n\t\t\t\t</Col>\n\t\t\t</Form.Row>\n\t\t</Form>\n\t);\n};\nexport default SearchBar;\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport './Loader.scss';\n\nconst Loader = () => {\n\treturn (\n\t\t<div className=\"loader\">\n\t\t\t<Spinner animation=\"border\" variant=\"warning\" />\n\t\t</div>\n\t);\n};\nexport default Loader;\n","import React, { Component } from 'react';\nimport { Container, Row, Col, CardColumns } from 'react-bootstrap';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport { fetchBookList, navigateTo } from '../../actions';\nimport './BookStore.scss';\nimport BookCard from '../../components/bookCard/BookCard';\nimport BookListPagination from '../../components/pagination/BookListPagination';\nimport SearchBar from '../../components/search/SearchBar';\nimport Loader from '../../components/loader/Loader';\n\nclass BookStore extends Component {\n\tcomponentDidMount() {\n\t\tlet { pageId } = this.props;\n\t\tpageId = pageId ? Number(pageId) : 1;\n\t\t// const URLQStrings = new URLSearchParams(this.props.search);\n\t\t// const code: string = URLQStrings.has('code') ? URLQStrings.get('code') : '';\n\t\tthis.loadPaginatedList(pageId);\n\t}\n\n\tloadPaginatedList = (page) => {\n\t\tpage > 1 && this.props.navigateTo(page);\n\t\tthis.props.fetchBookList({ page });\n\t};\n\n\tsearchBooks = (searchText) => {\n\t\tconst { current_page } = this.props;\n\n\t\tthis.props.fetchBookList({ page: current_page, searchText });\n\t};\n\n\trender() {\n\t\tconst { isLoaded, current_page, books, count } = this.props;\n\t\treturn (\n\t\t\t<main className=\"book-list-container\">\n\t\t\t\t<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col xs={6}>\n\t\t\t\t\t\t\t<SearchBar searchBooks={this.searchBooks} />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<BookListPagination\n\t\t\t\t\t\t\t\tloadPaginatedList={this.loadPaginatedList}\n\t\t\t\t\t\t\t\tactive={current_page}\n\t\t\t\t\t\t\t\ttotalPage={count}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t{!isLoaded && <Loader />}\n\t\t\t\t\t<CSSTransition in={isLoaded} timeout={500} classNames=\"content\" unmountOnExit>\n\t\t\t\t\t\t<CardColumns>{books.map((book, index) => <BookCard key={index} book={book} />)}</CardColumns>\n\t\t\t\t\t</CSSTransition>\n\t\t\t\t</Container>\n\t\t\t</main>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => ({\n\tisLoaded: state.bookList.isLoaded,\n\tbooks: state.bookList.books,\n\tcurrent_page: state.bookList.current_page,\n\tcount: state.bookList.count\n});\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tnavigateTo: (page) => dispatch(navigateTo(page)),\n\t\tfetchBookList: (options) => dispatch(fetchBookList(options))\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookStore);\n","export const API_ENDPOINT = \"http://nyx.vima.ekt.gr:3000\";","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport './Footer.scss';\n\nconst Footer = () => {\n\treturn (\n\t\t<footer className=\"footer\">\n\t\t\t<Container>\n\t\t\t\t<p className=\"mb-0 text-white small\">&copy; Suvarna Mondal's Test</p>\n\t\t\t</Container>\n\t\t</footer>\n\t);\n};\nexport default Footer;\n","import React from 'react';\nimport Header from '../components/header/Header';\nimport BookStore from '../containers/bookStore/BookStore';\nimport Footer from '../components/footer/Footer';\n\nfunction BookPage(props) {\n\treturn (\n\t\t<div className=\"d-flex flex-column\">\n\t\t\t<Header title=\"OnTrack Front End Developer Test\" />\n\t\t\t<BookStore pageId={props.match.params.pageId}/>\n\t\t\t<Footer />\n\t\t</div>\n\t);\n}\n\nexport default BookPage;\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport BookPage from './pages/BookPage';\nimport './_shared/styles/main.scss';\n\nfunction App() {\n\treturn (\n\t\t<HashRouter basename='/'>\n\t\t\t<Route exact path=\"/\" component={BookPage} />\n\t\t\t<Route path=\"/book-list/:pageId\" component={BookPage} />\n\t\t</HashRouter>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport store, { history } from './app/store';\nimport App from './app/App';\n\nReactDOM.render(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <App />\n        </ConnectedRouter>\n    </Provider>, document.getElementById('root'));"],"sourceRoot":""}